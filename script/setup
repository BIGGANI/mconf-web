#!/usr/bin/env ruby

LINUX_PACKAGES = {
  :common => %w( rubygems ruby-dev rdoc irb libopenssl-ruby wget make curl aspell-es aspell-en libxml2-dev libxslt-dev libmagickcore-dev libmagickwand-dev ),
  :production => %w( awstats logrotate nfs-common ),
  :development => %w( ),
  :mysql  => %w( libmysqlclient15-dev mysql-server ),
  :sqlite => %w( libsqlite3-dev )
}
#RUBY_GEMS_VERSION = "1.5.0"

DATABASES = %w( MySQL SQLite )

def install_linux_packages(set)
  return unless `uname`.chomp == "Linux" && `which aptitude` != ""

  puts "* Install #{ set } Linux packages"
  if LINUX_PACKAGES[set].any?
    system "sudo aptitude install #{ LINUX_PACKAGES[set].join(" ") }"
  end
end

def install_database
  puts "* Checking config/database.yml: "

  db_file = File.dirname(__FILE__) + "/../config/database.yml"

  if File.exist?(db_file)
    puts "file exists. Assuming configurated database."
    return
  end

  db_type = ask_for_db_type
  install_linux_packages(db_type)
  install_gems(db_type)

  `cp #{ db_file }.#{ db_type }.example #{ db_file }`

  if db_type == :mysql
    puts
    puts "***************************************************************"
    puts
    puts "MySQL support installed."
    puts "Please, configure your MySQL database and run the script again."
    exit(-1)
  end
end

def ask_for_db_type
  puts
  puts "Which database do you want to install?"
  DATABASES.each_with_index do |db, index|
    puts "#{ index + 1 }. #{ db }"
  end

  until ( number = STDIN.gets.chomp ) =~ /[12]/
    puts "Please, choose 1 or 2"
  end

  DATABASES[ number.to_i - 1].downcase.to_sym
end

def install_mail_conf
  puts "* Checking config/initializers/mail_conf.rb: "

  mail_file = File.dirname(__FILE__) + "/../config/initializers/mail_conf.rb"

  if File.exist?(mail_file)
    puts "file exists. Assuming configurated mail delivery."
    return
  end

  `cp #{ mail_file }.gmail.example #{ mail_file }`
  puts "Created basic #{ mail_file }, please configure it."
end

def install_bbb_conf
  puts "* Checking config/bigbluebutton_conf.yml: "

  bbb_file = File.dirname(__FILE__) + "/../config/bigbluebutton_conf.yml"

  if File.exist?(bbb_file)
    puts "file exists. Assuming configurated bigbluebutton server."
    return
  end

  `cp #{ bbb_file }.example #{ bbb_file }`
  puts "Created basic #{ bbb_file }, please configure it."
end

def setup_environment(env)
  install_linux_packages(:common)
  install_linux_packages(env)
  install_database
  install_mail_conf
  install_bbb_conf
#  system "rake setup:#{ env }"
end

def print_banner(env)
  puts
  puts "------------------------------"
  puts "Setting #{ env } environment"
  puts "------------------------------"
  puts
end

def print_usage
  puts "Usage: setup ENV"
  puts
  puts "ENVIRONMENTS:"
  puts "  production   - Setup production environment"
  puts "  development  - Setup development environment"
  puts
end

if ARGV[0] =~ /production/
  print_banner("PRODUCTION")
  setup_environment(:production)
elsif ARGV[0] =~ /development/
  print_banner("DEVELOPMENT")
  setup_environment(:development)
else
  puts "Wrong arguments."
  print_usage()
end
