@import "compass/css3";
@import "compass/typography/links";

// In some browsers (e.g. firefox) when an image is not found it is replaced by the alternative
// text set to it, and the dimensions of the image won't respect the width/height set by the css.
// This might break the layout in some cases.
// So, if an element might have a broken image inside it, it can include this mixin to deal with it.
// The image will still be replaced by the text, but it shouldn't break the layout anymore.
// In some cases the element that includes this might also have to specify its own width and height.
@mixin broken-img-parent($float:left) {
  overflow: hidden;

  img:-moz-broken {
    float: $float;
    font-size: 8px;
    word-wrap: break-word;
    background: white;
  }
}

// user logos in a thread with several snippets
// e.g. list of posts, list of recent users, etc.
@mixin logo-in-thread {
  float: left;
  margin-right: 10px;

  img {
    margin: 2px 0;
    padding: 2px;
    border: 1px solid $m-border-color-normal;
    @include border-radius($m-border-radius-small);
    &:hover { border: 1px solid $m-focus-border-color; }

    // default dimensions for logos inside threads
    &.logo-space, &.logo-space-activity {
      width: 52px;
      height: 39px;
    }
    &.logo-user, &.logo-user-activity {
      width: 39px;
      height: 39px;
    }
    /* &.logo-user-big { */
    /*   width: 64px; */
    /*   height: 64px; */
    /* } */
    &.logo-removed {
      width: 39px;
      height: 39px;
    }
  }

  @include broken-img-parent;
}

@mixin mconf-clearfix {
  @include clearfix;
  @include pie-clearfix;
}

// to 'hide' it and move it off the screen
// we can't just hide it because it won't be clickable
@mixin hide-input-file {
  opacity: 0;
  position: absolute;
  left: -1000px;
  top: -1000px;
  width: 0;
  height: 0;

  label { display: none; }
  input[type=file] {
    opacity: 0;
    position: absolute;
    width: 0;
    height: 0;
  }
}

@mixin danger-text {
  color: $m-red;
  @include link-colors($m-red, darken($m-red, 10), lighten($m-red, 5), lighten($m-red, 5));
  &:not(.btn) { @include link-colors($m-red, darken($m-red, 10), lighten($m-red, 5), lighten($m-red, 5)); }
}

// TODO: old method, not useful with bootstrap3 anymore
@mixin set-sidebar-width($new-width) {
  #sidebar {
    width: $new-width;
  }
  #content-middle {
    width: $m-contents-width - $new-width - 20px; // less right-margin
  }
}

// TODO: old method, not useful with bootstrap3 anymore
@mixin sidebar-position($pos) {
  @if $pos == 'left' {
    #sidebar {
      float: left;
    }
    #content-middle {
      float: right;
    }
  }
}

@function lighten-or-darken($bg, $color, $amountToLighten, $amountToDarken) {
  @if (lightness( $bg ) > 40) {
    $color: darken($color, $amountToDarken);
  }
  @else {
    $color: lighten($color, $amountToDarken);
  }
  @return $color;
}

//
// Methods below from: https://github.com/stubbornella/oocss
//
// Function for converting a px based font-size to rem.
@function calculate-rem($size) {
  $remSize: $size / 16px;
  // Default font size on html element is 100%, equivalent to 16px;
  @return #{$remSize}rem;
}
// Mixin that will include the fall back px declaration as well as the calculated rem value.
@mixin font-size($size) {
  font-size: $size;
  font-size: calculate-rem($size);
}

// Highlighted content blocks
@mixin block-wrapper-active {
  &.active {
    background: $m-alert-success-bg;
    .content-block, .list-thumbnail {
      border-color: darken($m-alert-success-bg, 15);
      border-width: 1px;
    }
  }
}

@mixin set-max-site-width {
  @media (min-width: $screen-lg-min) {
    max-width: $m-contents-max-width;
    margin-left: auto;
    margin-right: auto;
  }
}

@mixin link-on-menus {
  &:hover { text-decoration: none; }
}

@mixin link-style($style) {

  @if ($style == 3) {
    a:not(.btn) {
      @include link-colors($m-link-color-3, $m-link-color-3-hover, $m-link-color-3-active, $m-link-color-3);
      text-decoration: none;
      //font-weight: bold;
    }
  }

  // link style usually used in menus of all kinds
  @elseif ($style == 2) {
    a:not(.btn) {
      @include link-colors($m-link-color-2, $m-link-color-2-hover, $m-link-color-2-active, $m-link-color-2);
      text-decoration: none;
    }
  }

  // default link styles
  @else {
    a:not(.btn) {
      @include link-colors($m-link-color, $m-link-color-hover, $m-link-color-active, $m-link-color);
    }
  }
}

@mixin font-for-titles {
  font-family: $m-font-family-titles;
}

@mixin font-for-code {
  font-family: $m-font-family-mono;
}

@mixin text-truncate {
  white-space: nowrap;
  word-wrap: normal;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin small-date {
  color: #666;
  font-weight: normal;
  @include font-size($m-font-small);
}

// default horizontal menu
@mixin horizontal-menu {
  margin: 0;
  clear: both;
  @include mconf-clearfix;
  padding: 0 15px;

  > ul {
    // margin: 0 0 -2px 0; // -2 so selected items border gets over the default menu border
    margin: 0;
    padding: 0;

    > li {
      margin: 0 15px -2px 0; // -2 so selected items border gets over the default menu border
      display: inline-block;
      // margin-right: 15px;
      padding: 5px 15px 3px 15px;
      font-weight: bold;
      @include font-size($m-font-medium);

      // use link-style(2) but with a lighter default color
      @include link-style(2);
      > a:not(.btn) {
        color: $m-page-menu-font-color;
        &:visited { color: $m-page-menu-font-color; }
        &.danger-text {
          @include danger-text;
        }
      }

      &.active {
        border-bottom: 3px solid $m-second-color;
        a {
          $normal: darken($m-page-menu-font-color, 20);
          $hover: lighten($m-page-menu-font-color, 10);
          @include link-colors($normal, $hover, $hover, $normal);
        }
      }

      .caret-container {
        padding: 0 5px;
        display: block;
      }

      .caret {
        border-top-color: #888;
        margin-top: 6px;
      }

      .dropdown-menu {
        left: -8px;
      }
    }
  }
}
