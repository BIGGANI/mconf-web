<% menu :posts %>
<% atom_link_header(space, Post.new) %>

<% content_for :headers do  -%>
  <%= javascript_include_tag 'jquery.filestyle', 'fckeditor/fckeditor' %>
<% end -%>

<% content_for :javascript do %>

/*
*  Expand and collapse thread
*/
extend_thread = function(id){
  $("#parent_" + id + " .extended_thread").show();
  $("#parent_" + id + " .extend_thread").hide();
  $("#parent_" + id + " .collapse_thread").show();
  
}

collapse_thread = function(id){
  $("#parent_" + id + " .extended_thread").hide();
  $("#parent_" + id + " .extend_thread").show();
  $("#parent_" + id + " .collapse_thread").hide();
  
}  

/*
*  New thread panel
*/

/* Submit without ajax until it will be posible to render message errors when a post witj attachment fail*/
/*$("#thread-form").postsForm('<%= space_posts_url(@space) %>');*/

$(".new_thread_options").click(function(){
  $(".new_thread_options").removeClass("selected");
  $(this).addClass("selected");
});

style_file_input();

/*
*  Reply panel
*/

$("#new_comment_link").livequery('click',function () { 
  $("#new_photo_form").hide();
  return false;
});

$("#new_photo_link").livequery('click',function () {
  $("#new_photo_form").show(); 
  return false;
});

$("#new_doc_link").livequery('click',function () {
  $("#new_photo_form").show();
  return false;
});

/*
*  Replace with Ajax links
*/

$("a.reply_to_link").click(function(){
  var route = "<%= space_posts_path(@space) %>" + "/" + $(this).attr("name");
  $.get(route,
	 {authenticity_token: "<%=form_authenticity_token()%>"},
	 function(data){
	   $("#sidebar").children("div:last").replaceWith(data);
	   
	   /* Reply panel javascript*/
	   /*$("#reply-form").postsForm('<%= space_posts_url(@space) %>');*/
	   
	   $(".new_reply_options").click(function(){
	     $(".new_reply_options").removeClass("selected");
	     $(this).addClass("selected");});
	     style_file_input();
	     var destination = $('#add').offset().top;
	     $("html:not(:animated),body:not(:animated)").animate({ scrollTop: destination}, 1100, function() {
	       window.location.hash = '#add'
	     });
	     setTimeout(function() {
	       $("#new_reply").effect("highlight", {color:"#F5DF51"}, 3000);
	     }, 1000);
	     
	     $("a#big_new_reply").fancybox({
	       'hideOnContentClick' : false,
					   'callbackOnShow' : function(){
					     $(".big_post_text").val($(".small_post_text").val());
						 $("textarea#post_text").remove();//IE Compatibility
					     big_textarea();
					     $("#fancy_outer").width($("#new_thread_big").width() + 50);
					     $("#fancy_outer").height($("#new_thread_big").height() + 80);
					     $(window).resize();
					   },
					   'callbackOnClose' : function(){
					     var oEditor = FCKeditorAPI.GetInstance('post[text]') ;
					     var data = oEditor.GetHTML();
						 $("form#reply-form button").before("<%= escape_javascript(small_post_text_area) %>");//IE Compatibility
					     $(".small_post_text").val(data);
					   }
	     });
	 }
	 );
	 return false;
});

$("a.edit_post_link").click(function(){
  var route = "<%= space_posts_path(@space) %>" + "/" + $(this).attr("name") + "?edit=true";
  $.get(route,
	 {authenticity_token: "<%=form_authenticity_token()%>"},
	 function(data){
	   $("#sidebar").children("div:last").replaceWith(data);
	   
	   /*Edit thread*/
	   /*$("#edit-form").postsForm('<%= space_posts_url(@space) %>');*/
	   
	   $(".edit_thread_options").click(function(){
	     $(".edit_thread_options").removeClass("selected");
	     $(this).addClass("selected");});
	     
	     /*Edit reply*/
	     $(".edit_reply_options").click(function(){
	       $(".edit_reply_options").removeClass("selected");
	       $(this).addClass("selected");});
	       
	       style_file_input();
	       
	       /*Scroll to the edit form*/
	       var destination = $('#add').offset().top;
	       $("html:not(:animated),body:not(:animated)").animate({ scrollTop: destination}, 1100, function() {
		 window.location.hash = '#add'
		 
		 /*Extract form fancbox*/ 
		 $("a#big_edit_thread").fancybox({
		   'hideOnContentClick' : false,
						 'callbackOnShow' : function(){
						   $(".big_post_text").val($(".small_post_text").val());
						   $(".big_post_title").val($(".small_post_title").val());
						   $("textarea#post_text").remove();//IE Compatibility
						   big_textarea();
						   $("#fancy_outer").width($("#new_thread_big").width() + 50);
						   $("#fancy_outer").height($("#new_thread_big").height() + 80);
						   $(window).resize();
						 },
						 'callbackOnClose' : function(){
						   var oEditor = FCKeditorAPI.GetInstance('post[text]') ;
						   var data = oEditor.GetHTML();
						   $("form#edit-form button").before("<%= escape_javascript(small_post_text_area) %>");//IE Compatibility
						   $(".small_post_text").val(data);
						   $(".small_post_title").val($(".big_post_title").val());
						 }
		 });
	       });
	       
	       setTimeout(function() {
		 $("#edit_reply").effect("highlight", {color:"#F5DF51"}, 3000);
		 $("#edit_thread").effect("highlight", {color:"#F5DF51"}, 3000);
	       }, 1000);	
	 });
	 
	 return false;
});

$("#query").click(function(){
  if(this.value == "Search Posts..."){
    this.value="";
  }
});


/*Extended post creation*/

/*New thread*/

$("a#big_new_thread").fancybox({
  'hideOnContentClick' : false,
			       'callbackOnShow' : function(){
				 $(".big_post_title").val($(".small_post_title").val());
				 $(".big_post_text").val($(".small_post_text").val());
				 $("textarea#post_text").remove(); //IE Compatibility
				 big_textarea();
				 $("#fancy_outer").width($("#new_thread_big").width() + 50);
				 $("#fancy_outer").height($("#new_thread_big").height() + 80);
				 $(window).resize();
			       },
			       'callbackOnClose' : function(){
				 $(".small_post_title").val($(".big_post_title").val());
				 /*close_lightbox();*/
				 
				 var oEditor = FCKeditorAPI.GetInstance('post[text]') ;
				 var data = oEditor.GetHTML();
				 $("form#thread-form button").before("<%= escape_javascript(small_post_text_area) %>"); //IE Compatibility
				 $(".small_post_text").val(data);
			       }    
});

$("a.new_thread_big_options").livequery("click", function(){
  var route = $(this).attr("href");
  var oEditor = FCKeditorAPI.GetInstance('post[text]') ;
  var data = oEditor.GetHTML();
  $.get(route,
	 {authenticity_token: "<%=form_authenticity_token()%>",
	 post_title: $(".big_post_title").val(),
	 post_text: data
	 },
	 function(data){
	   $("#fancy_ajax").children().remove();
	   $("#fancy_ajax").append(data);
	   big_textarea();
	   $("#fancy_outer").height($("#new_thread_big").height() + 80);
	   $(window).resize(); 
	 }
	 );
	 return false;
});


/*Reply*/

$("#new_comment_big_link").livequery('click',function () {
  $(".big_options").removeClass("selected");
  $(this).addClass("selected"); 
  $("#new_photo_big_form").hide();
  $("#fancy_outer").height($("#new_thread_big").height() + 80);
  $(window).resize();
  return false;
});

$("#new_photo_big_link").livequery('click',function () {
  $(".big_options").removeClass("selected");
  $(this).addClass("selected");
  $("#new_photo_big_form").show();
  $("#fancy_outer").height($("#new_thread_big").height() + 80);
  $(window).resize();
  return false;
});

$("#new_doc_big_link").livequery('click',function () {
  $(".big_options").removeClass("selected");
  $(this).addClass("selected");
  $("#new_photo_big_form").show();
  $("#fancy_outer").height($("#new_thread_big").height() + 80);
  $(window).resize();
  return false;
});

<%= render :partial => 'fckeditor_functions' %>

<% end %>

<% content_for :search do  %>
  <% form_tag(search_posts_path(@space), :method => 'get') do %>
		<%= text_field_tag 'query',(params[:query] ? params[:query] : "Search Posts...")%>
	  <button type="submit"><%=t("button.go")%></button>
  <% end %>
<%end%>
<% content_for :sidebar do  %>

  <% unless space.users.include?(current_user) %>
  <div id="join">
    <% form_tag space_join_requests_path(space) do %>
	<button class="join-space" type:"submit"><%=t('space.join')%></button>
    <% end %>
  </div>
  <% end %>
  <div class="space-desc">
	<h3>About <em><%=@space.name%></em></h3>
	  <p><%=image_tag(logo_image_path(@space, :size =>'h48'), :align => "left")%><%= sanitize(space.description) if space.description.present? %></p>
	</div>	
	<a id="add" name="add"></a>
  <%if @space.authorize?([:create, :content],:to => current_user)%>
	
  	<% if params[:reply_to]%>
      	<%= render :partial => "new_reply", :locals => { :post => Post.find(params[:reply_to]) } %>
  	<% elsif params[:edit] %>
    	<% post = Post.find(params[:edit]) %>
    	<% if post.parent_id %>
        	<%= render :partial => "edit_reply", :locals => { :post => post } %>
    	<% else %>
        	<%= render :partial => "edit_thread", :locals => { :post => post } %>
    	<% end %>
  	<%else%>
    	<div id="new_thread" >
      	<%= render :partial => "new_thread" %>
    	</div>
  	<%end%>  
	<% end %>
<% end %>

<!-- Content -->
<div id="change_view">
  <%=("Want to compress all conversations? " + link_to("Switch to compact view", space_posts_path(@space, :extended => "false"))) if params[:extended]=="true" || (!params[:extended] && current_user.expanded_post)%>
  <%=("Want to see more about the threads? " + link_to("Switch to extended view", space_posts_path(@space, :extended => "true"))) unless params[:extended]=="true" || (!params[:extended] && current_user.expanded_post)%>
</div>

<%if params[:extended]=="true" || (!params[:extended] && current_user.expanded_post)%>
  <%= render :partial => "extended_threads", :locals => {:threads => @posts} %>
<%else%>
  <%= render :partial => "collapsed_threads", :locals => {:threads => @posts} %>
<%end%>
<%= will_paginate @posts %>