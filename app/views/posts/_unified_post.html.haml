-# TODO: when extended == true
- show_author ||= false

-# TODO: Review if the id can't be created with div_for(thread)
%div.thread.thread-post{:class => "#{cycle("thread-even" , "thread-odd")}", :id => "parent-#{thread.id}"}

  .logo-in-thread
    = link_logo(thread.space, :size => 'w48', :url => space_path(thread.space), :title => thread.space.name).html_safe

  .thread-content

    %ul.thread-action-links.visible-on-hover{ :"data-hover-tracked" => "parent-#{thread.id}" }
      - if thread.space.authorize?([:create, :content], :to => current_user)
        %li= link_to t('reply').downcase, space_post_path(thread.space, thread, :reply_to => thread), { :name => thread.id, :title => t('comment.add') }
      - if thread.authorize?(:update, :to => current_user)
        %li= link_to t('edit').downcase, get_edit_route(thread), :title => t('edit')
      - if thread.authorize?(:delete, :to => current_user)
        %li= link_to t('remove').downcase, space_post_path(thread.space,thread), {:method => :delete, :title => t('delete.one'), :confirm => t('delete.confirm', :element => thread.title) }
      - if user_signed_in? && thread.spam != true
        %li= link_to t('spam.default').downcase, spam_lightbox_space_post_path(thread.space,thread), { :name => thread.id, :title => t('spam.report') }

    .thread-title
      = comment_icon t('post.home.one', :space => thread.space.name)
      - if show_author and thread.author
        = link_to thread.author.name, user_path(thread.author), { :class => "thread-author" }
      - if thread.space.authorize?([:read, :content], :to => current_user)
        = t('date.at')
        = link_to first_words(thread.title, 30), space_post_path(thread.space, thread)
      - if thread.attachments.any?
        = attachment_icon thread.attachments.first.filename
      %span.thread-updated-at= t('updated_time_ago', :time => time_ago_in_words(thread.updated_at))

    .thread-text
      %p= first_words(thread.text, 100)
      - if extended
        = render :partial => "posts/parent_post", :locals => { :post =>  thread, :selected_post => false}
