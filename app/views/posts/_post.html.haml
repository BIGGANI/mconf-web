- thread_class ||= nil
.thread{:id => "parent-#{post.id}", :class => "#{thread_class}"}
  .logo-in-thread
    = link_logo_image(post.author, :size => '32', :title => post.author.name, :url => user_path(post.author)) if post.author
  .thread-content
    %ul.thread-action-links.visible-on-hover{ :"data-hover-tracked" => "parent-#{post.id}" }
      - if can?(:update, post)
        %li= link_to t('edit').downcase, edit_space_post_path(post.space, post), { :name => post.id, :title => t('edit'), :class => "open-modal" }
      - if can?(:destroy, post)
        %li= link_to t('remove').downcase, space_post_path(post.space,post), {:method => :delete, :title => t('delete.one'), :confirm => t('delete.confirm', :element => post.title) }
      - if user_signed_in? and !post.spam
        %li= link_to t('spam.default').downcase, spam_report_space_post_path(post.space,post), { :name => post.id, :title => t('spam.report'), :class => "spam-report" }

    .thread-title
      = icon_comment t('post.home.one', :space => post.space.name)
      - if post.author
        = link_to post.author.name, user_path(post.author), { :class => "thread-author" }
      = icon_spam() if post.spam
    .thread-text
      %p= post.text
