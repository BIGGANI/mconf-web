- @sender = User.find_with_disabled(private_message.sender_id)
.logo-in-thread
  = @sender.disabled? ? logo(@sender, :size => 32) : raw(link_logo(@sender,:size=>32, :url => user_path(@sender), :title => @sender.username))
.thread-content 
  - unless params[:id]
    %ul.thread-action-links.visible-on-hover{ :"data-hover-tracked" => "parent-#{private_message.id}" }
      %li= link_to t('private_message.open'), user_message_path(params[:user_id], private_message)
      - privatetitle = sanitize(private_message.title)
      %li= link_to t('delete.one'), user_message_path(params[:user_id],private_message, :private_message => {:deleted_by_receiver => true}), :confirm => t('delete.confirm', :element => privatetitle), :method => :delete,:title => t('delete.one')
    
  .thread-title
    - if private_message.sender_id.present?
      .thread-author
        = @sender.disabled? ? @sender.name : link_to(@sender.name, user_path(@sender))
    .subject
      = t('subject')
      - if params[:id] 
        = private_message.title 
      - else 
        = link_to sanitize(private_message.title), user_message_path(params[:user_id], private_message), :class => "message_link"
    .thread-updated-at
      = ((Time.now.to_date == private_message.created_at.to_date) ? time_ago_in_words(private_message.created_at) : private_message.created_at.strftime("%d %b"))
  
  .thread-text
    - if params[:id]
      = sanitize(auto_link(simple_format(private_message.body)))
    - else
      = sanitize(auto_link(simple_format(private_message.body[0...200]))) 
