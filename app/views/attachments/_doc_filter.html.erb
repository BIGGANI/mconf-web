<%content_for :javascript do%>
  filter_title = function(s){
	  $("tr.ui-collection-result").each(function() {
		  if($(this).children("td.attachment-name").children("a").text().toLowerCase().search(s.toLowerCase())>=0){
        $(this).css("display","");
	    }else{
	      $(this).hide();
	    }
    });
	};
	
	filter_author = function(s){
    $("tr.ui-collection-result").each(function() {
      if($(this).children("td.attachment-author").children("a").text().toLowerCase().search(s.toLowerCase())>=0){
        $(this).css("display","");
      }else{
        $(this).hide();
      }
    });
  };
	
	filter_any = function(s){
    $("tr.ui-collection-result").each(function() {
		  show_row = $(this).children("td.attachment-name").children("a").text().toLowerCase().search(s.toLowerCase())>=0
			              || $(this).children("td.attachment-author").children("a").text().toLowerCase().search(s.toLowerCase())>=0;
			if(show_row){
        $(this).css("display","");
      }else{
        $(this).hide();
      }	
		});
	};
	
	filter_type = function(type){
	  $("tr.ui-collection-result").each(function() {
      if($(this).children("td.attachment-name").attr("rel")==type){
        $(this).css("display","");
      }else{
        $(this).hide();
      }
    });
	}
	
	$("#title_filter").livequery('keyup', function() {
	  filter_title(this.value);
	});
	
	$("#author_filter").livequery('keyup', function() {
    filter_author(this.value);
  });
	
	$("#any_field_filter").livequery('keyup', function() {
    filter_any(this.value);
  });
	
	$("#type_filter").livequery('change', function() {
    filter_type($(this).val());
  });
	
	$("#mix_filter").livequery('change', function() {
    $(".mixed_alternative").hide();
		$("tr.ui-collection-result").css("display","");
		$("#" + $(this).val()).val("").show();
  });
	
	$("#repository_filters").show()
<%end%>

<div id="repository_filters" style="display:none">

	<div id="tag_filter">
	  <label><%=@tags.present? ? t('tag.selected', :count => @tags.size) : t('tag.filter')%></label>
		<select id="attachment_tags_filter" multiple="multiple" name="tags[]">
	    <%=options_for_fcbkcomplete(@space.tags,:id,:name,@tags)%>
	  </select>
		<!--<label>Other tags:</label>
	  <%(@space.tags - @tags).each do |t|%>
		  <%=link_to t.name, path_for_attachments({:add_tag => t.id}), :class => "add_tag_filter"%>
		<%end%>-->
	</div>
	
	<div id="mixed_filter">
		<label><%=t('find_in')%></label>
		<select id="mix_filter">
			<option value="any_field_filter"><%=t('any_field')%></option>
			<option value="author_filter"><%=t('author')%></option>
			<option value="type_filter"><%=t('type')%></option>
			<option value="title_filter"><%=t('title')%></option>
		</select>
		<%=text_field_tag :any_field,'', :id => "any_field_filter", :class => "mixed_alternative" %>
		<%=text_field_tag :title,'', :id => "title_filter", :class => "mixed_alternative", :style => "display:none" %>
		<%=text_field_tag :author,'', :id => "author_filter", :class => "mixed_alternative", :style => "display:none" %>
		<select id="type_filter" class="mixed_alternative" style="display:none">
		 	<%@attachments.select{|a| a.mime_type.present?}.map{|a| a.mime_type.to_sym.to_s}.uniq.each do |type|%>
			  <option value="<%=type%>"><%=type%></option>  
			<%end%>
	  </select>
	</div>
	
</div>