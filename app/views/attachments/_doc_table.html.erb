<div id="doc_table">

  <%=collection_table(version_attachment(@attachments)) do |t|

      t.header :name, sortable_header(t('title'),'filename')
      t.header :author, sortable_header(t('author'),'author')
      t.header :updated, sortable_header(t('updated'),'updated_at')
      t.header :tags, t('tags')
#      t.header :type, sortable_header(t('type'),'type')
#      t.header :actions, t('actions')

      t.rows.each do |row, object, index|
        if object.instance_of?(Attachment)
          attachment=object

          row.name           "#{link_to image_tag("right.png"),path_for_attachments({:expanded => attachment.id}), :class => "table_params" if attachment.version>1} #{link_to attachment.filename,space_attachments_path(@space, :doc_info => attachment.id, :version => attachment.version), :class => "doc_show"} (#{attachment.get_size.strip!})", :rel => (attachment.mime_type.present? ? attachment.mime_type.to_sym.to_s : "")
          row.author         link_to attachment.author.name, user_profile_path(attachment.author)
          row.updated        "<span title=\"#{l(attachment.updated_at, :format => :long)}\">#{l(attachment.updated_at.to_date)}</span>"
          row.tags           attachment.tags.map{|t| link_to(t.name,path_for_attachments({:add_tag=>t.id}), :class=> "add_tag_filter")}.join(",")
#          row.type           "#{image_tag(attachment.logo_image_path_without_thumbnails, :alt => "")} #{attachment.content_type.split("/").last.upcase}"
#          row.actions        table_actions(attachment)

        elsif object.instance_of?(Version)
          attachment=object.versioned
          attachment.revert_to(object.version)
          
          row[:class] += " version_expanded"

          row.name           "#{link_to image_tag("down.png"),path_for_attachments({:not_expanded => attachment.id}), :class => "table_params" if attachment.version==attachment.versions.size} #{attachment.version} #{link_to attachment.filename,space_attachments_path(@space, :doc_info => attachment.id, :version => attachment.version), :class => "doc_show"} (#{attachment.get_size.strip!})"
          row.author         link_to attachment.author.name, user_profile_path(attachment.author)
          row.updated        "<span title=\"#{l(attachment.updated_at, :format => :long)}\">#{l(attachment.updated_at.to_date)}</span>"
          row.tags           attachment.version==attachment.versions.size ? attachment.tags.map{|t| link_to(t.name,path_for_attachments({:add_tag=>t.id}), :class=> "add_tag_filter")}.join(",") : ""
#          row.type           "#{image_tag(attachment.logo_image_path_without_thumbnails, :alt => "")} #{attachment.mime_type.to_sym}"
#          row.actions        table_actions(attachment)

        else
          
        end
      end
    end
  %>
</div>