= content_for :"page-title-extra" do
  %span= t('user.edit.did_not_find_info')
  = link_to t('user.edit.click_to_edit_profile'), edit_user_profile_path(current_user)
= render_page_title t('user.edit_account')

- if logged_in? and @shib_user
  #user-federated-info
    .more-information= link_to t('user.edit.federated.see_your_data'), shibboleth_info_path, :class => 'open-modal'
    %span.title= t('user.edit.federated.title')
    %span= t('user.edit.federated.your_idp', :idp => @shib_provider)
    %span= t('user.edit.federated.restrictions')

#account-info.left-column
  %h3= t('account_info')
  = simple_form_for user, :url => user_path(user.login_changed? ? user.login_was : user), :html => {:method => :put, :class => 'single-column'} do |f|
    = render :partial => 'form_fields', :locals => { :f => f }
    = f.button :submit, t("save"), :class => "btn"

#account-preferences.right-column
  %h3= t('preferences')

  = simple_form_for :user, :url => user_path(@user), :html => {:method => :put, :class => 'single-column'} do |f|

    = f.input :timezone, :label => t('user.timezone'), :required => false, :hint => t("tooltip.timezone") do
      = f.time_zone_select :timezone, nil, :include_blank => true

    = f.input :expanded_post, :label => t('user.view_expanded_posts'), :required => false, :as => :radio_buttons

    = f.input :notification, :label => t('user.notifications'), :required => false do
      - collection = []
      - collection.push([User::NOTIFICATION_VIA_PM, t('user.by_private_message')])
      - collection.push([User::NOTIFICATION_VIA_EMAIL, t('user.by_email')])
      = f.collection_radio_buttons :notification, collection, :first, :last

    = f.input :receive_digest, :label => t('user.receive_digest.description'), :required => false do
      - collection = []
      - collection.push([User::RECEIVE_DIGEST_NEVER, t('user.receive_digest.never')])
      - collection.push([User::RECEIVE_DIGEST_DAILY, t('user.receive_digest.daily')])
      - collection.push([User::RECEIVE_DIGEST_WEEKLY, t('user.receive_digest.weekly')])
      = f.collection_radio_buttons :receive_digest, collection, :first, :last

    - if logged_in? && current_user.superuser==true && @user.id != current_user.id
      = f.input :superuser, :as => :radio_buttons, :label => t('user.edit.make_admin'), :required => false

    = f.button :submit, t("save"), :class => "btn"
