-# Locals
-#  event (Event)

.thread{:class => "#{cycle("thread-even" , "thread-odd")}", :id => "parent_event_#{event.id}"}

  .logo-in-thread
    = render :partial => "events/event_logo", :locals => { :event => event }

  .thread-content

    %ul.thread-action-links.visible-on-hover{ :"data-hover-tracked" => "parent_event_#{event.id}" }
      - if can?(:update, event)
        %li= link_to t('edit').downcase, edit_space_event_path(event.space, event), { :name => event.id, :title => t('edit') }
      - if can?(:destroy, event)
        %li= link_to t('remove').downcase, space_event_path(event.space, event), { :method => :delete, :title => t('delete.one'), :confirm => t('delete.confirm', :element => event.title) }
      - if user_signed_in? && !event.spam
        %li= link_to t('_other.spam.title').downcase, spam_report_space_event_path(event.space, event), options_for_tooltip(t('_other.spam.tooltip'), :method => :post, :confirm => t('are_you_sure'))

    .thread-title
      = icon_event t('event.home.one', :space => event.space.name)
      = icon_spam() if event.spam
      = link_to sanitize(event.title), space_event_path(event.space, event)
      %span.thread-updated-at= t('updated_time_ago', :time => sanitize(time_ago_in_words(event.updated_at)))

    .thread-text
      .event-description-date
        = t('.when') + ':'
        = event.get_formatted_date
        - unless event.location.blank?
          .event-description-location
            = t('.where') + ':'
            = sanitize(event.location)
        .event-description-organizer
          = t('.organizers') + ':'
          - orgs = []
          - event.organizers.each do |org|
            - orgs.push link_to org.name, user_path(org)
          = orgs.join(', ').html_safe
