.thread{ :class => "#{event.is_happening_now? ? 'single_event current_single_event' : 'single_event'}" }
  %h2
    = spam_icon() if @event.spam
    %span= @event.title
  .logo-in-thread
    = render :partial => "event_logo", :locals => { :event => @event }

  .thread_content{ :id => "parent_event_#{@event.id}" }
    %ul.thread-action-links.visible-on-hover{ :"data-hover-tracked" => "parent_event_#{@event.id}" }
      - if can?(:update, @event)
        %li= link_to t('edit').downcase, edit_space_event_path(@event.space, @event), { :name => @event.id, :title => t('edit'), :id => "event-edit" }
      - if can?(:destroy, @event) && !@event.is_happening_now?
        %li= link_to t('remove').downcase, space_event_path(@event.space, @event), {:method => :delete, :title => t('delete.one'), :confirm => t('delete.confirm', :element => @event.title) }
      - if user_signed_in? && event.spam != true
        %li= link_to t('spam.default').downcase, spam_report_space_event_path(@event.space,@event), { :name => @event.id, :title => t('spam.report'), :id => "spam-lightbox" }
    .thread-title
      %p
        %span.updated
          = t('created_time_ago', :time => sanitize(time_ago_in_words(@event.created_at)))
      .main_date.logo_padding
        = t('when')
        = @event.get_formatted_date
      - if event.location
        .main_text.logo_padding
          = t('where')
          = sanitize(@event.location)
        .main_text.logo_padding
          = t('organizer')
          - isfirst=true
          - event.organizers.each do |org|
            - if isfirst
              - isfirst=false
            - else
              = ","
            = link_to(highlight(org.name,@query),user_path(org),:class=>"unified_user")
        .main_text.logo_padding
          - if @event.web_interface?
            - if isfirst
              - isfirst=false
            - else
              = ","
            - unless @event.is_happening_now? || (@event.is_in_person? && !@event.past?)
              = t('event.view_participation')
            - else
              = link_to t('event.view_participation'), space_event_path(@space, @event, :show_participation => true)

    .thread-text
      %p
        = simple_format(@event.description)
