%div{:class => "thread #{cycle('thread-even','thread-odd')}"}
  .logo-in-thread
    = link_logo_image(jr.candidate, :size => '32', :url => user_path(jr.candidate), :title => jr.candidate.name, :class => "logo logo-user")
  .thread-content
    .thread-actions
      - target = jr.candidate ? jr.candidate.name : jr.email

      -# TODO: better message
      = link_to t('_other.decline'), decline_space_join_request_path(@space, jr), method: :post, class: "btn btn-danger btn-small", data: { confirm: t('_other.decline') }
      %span.separator= t('or')
      -# = link_to t('_other.accept'), accept_space_join_request_path(@space, jr), method: :post, class: "btn btn-success btn-small", data: { confirm: t('_other.accept') }
      = simple_form_for [@space, jr], url: accept_space_join_request_path(@space, jr), method: :post do |f|
        -# TODO: use confirm in the button, not used now because it doesn't work in forms
        -#   :confirm => t('.accept', :user => target)
        -#   See http://dev.mconf.org/redmine/issues/1169
        = f.submit t('_other.accept'), :class => "btn btn-success btn-small"
        %span= t('join_requests.index.accept_as').downcase
        - roles = Space.roles.map { |r| [ r.translated_name, r.id ] }
        = select :join_request, :role_id, roles, :selected => default_role.id

    .thread-title
      = link_to sanitize(jr.candidate.name), user_path(jr.candidate)
      .user-email
        = "(#{jr.candidate.username}, #{jr.candidate.email})"
    .thread-text
      - unless jr.comment.blank?
        %span= t('join_requests.index.user_message') + ':'
        %span= "\"#{jr.comment}\""
